%YAML 1.2
---
# http://www.sublimetext.com/docs/syntax.html
name: OpenType Feature File
file_extensions:
  - fea
  - family
first_line_match: |-
  (?x)
  # First line of “Fraction Fever”, a prominent example of an OpenType features list. Source:
  # http://web.archive.org/web/20130325033504/http://talleming.com/2009/10/01/fraction-fever-2/
  \A\s*@figures\s+=\s+\[\r?\n\s*zero(?:$|\s)
  |
  # Modeline
  (?:
    # Emacs
    -\*-(?i:[ \t]*(?=[^:;\s]+[ \t]*-\*-)|(?:.*?[ \t;]|(?<=-\*-))[ \t]*mode[ \t]*:[ \t]*)
      (?i:fea(?:tures?(?:[-_]?file)?)|opentype|otf)
    (?=[ \t;]|(?<![-*])-\*-).*?-\*-

    |

    # Vim
    (?:(?:^|[ \t])(?:vi|Vi(?=m))(?:m[<=>]?[0-9]+|m)?|[ \t]ex)(?=:(?=[ \t]*set?[ \t][^\r\n:]+:)|:(?![ \t]*set?[ \t]))
    (?:(?:[ \t]*:[ \t]*|[ \t])\w*(?:[ \t]*=(?:[^\\\s]|\\.)*)?)*[ \t:]
    (?:filetype|ft|syntax)[ \t]*=
      (?i:fea(?:tures?(?:[-_]?file)?)|opentype|otf)
    (?=$|\s|:)
  )
scope: source.opentype
contexts:
  main:
    - include: comments
    - include: target
    - include: blocks
    - include: keywords
    - include: tags
    - include: inclusion
    - include: strings
    - include: number
    - include: punctuation
    - include: identifier
  blocks:
    - match: '(?<=^|[\s{}])(feature)\s+(\w+)(?:\s+(useExtension))?\s*({)'
      captures:
        1: storage.type.var.feature.opentype
        2: entity.name.feature.opentype
        3: keyword.operator.opentype
        4: punctuation.section.bracket.curly.begin.opentype
      push:
        - meta_scope: meta.feature.opentype
        - match: '(})\s*(\2)\s*(?=[#;]|$)'
          captures:
            1: punctuation.section.bracket.curly.end.opentype
            2: entity.name.feature.opentype
          pop: true
        - match: '(?<=^|[\s{};])sizemenuname(?=[\s#;]|$)'
          scope: keyword.operator.opentype
        - include: main
    - match: '(?<=^|[\s{}])(lookup)\s+((?![\d.])[A-Za-z0-9._]+)(?:\s+(useExtension))?\s*({)'
      captures:
        1: storage.type.var.lookup.opentype
        2: entity.name.lookup.opentype
        3: keyword.operator.opentype
        4: punctuation.section.bracket.curly.begin.opentype
      push:
        - meta_scope: meta.lookup.opentype
        - match: '(})\s*(\2)\s*(?=[#;]|$)'
          captures:
            1: punctuation.section.bracket.curly.end.opentype
            2: entity.name.lookup.opentype
          pop: true
        - include: main
    - match: '(?<=^|[\s{};])(table)\s+([\w/]+)\s*({)'
      captures:
        1: storage.type.var.table.opentype
        2: entity.name.table.opentype
        3: punctuation.section.bracket.curly.begin.opentype
      push:
        - meta_scope: meta.table.opentype
        - match: '(})\s*(\2)\s*(?=[#;]|$)'
          captures:
            1: punctuation.section.bracket.curly.end.opentype
            2: entity.name.table.opentype
          pop: true
        - match: |-
            (?x) (?<=^|[\s{};])
            (GlyphClassDef|Attach|LigatureCaretBy(?:Dev|Index|Pos)|MarkAttachClass
            |(?:Horiz|Vert)Axis\.(?:BaseTagList|BaseScriptList|MinMax)|FontRevision
            |CaretOffset|Ascender|Descender|LineGap|Panose|TypoAscender|TypoDescender
            |TypoLineGap|winAscent|winDescent|UnicodeRange|CodePageRange|XHeight|CapHeight
            |Vendor|VertTypoAscender|VertTypoDescender|VertTypoLineGap|VertOriginY|VertAdvanceY)
            (?=[\s#;]|$)
          scope: keyword.operator.table-field.opentype
        - include: main
    - match: '(?<=^|[\s{};])(anonymous|anon)\s+([\w.]+)\s*({)'
      captures:
        1: storage.type.var.opentype
        2: entity.name.anon-tag.opentype
        3: punctuation.section.bracket.curly.begin.opentype
      push:
        - meta_content_scope: string.unquoted.heredoc.opentype
        - match: '(})\s*(\2)\s*(;)'
          captures:
            1: punctuation.section.bracket.curly.end.opentype
            2: entity.name.anon-tag.opentype
            3: punctuation.terminator.statement.opentype
          pop: true
    - match: '(?<=^|[\s{}])(cvParameters)\s*({)'
      captures:
        1: storage.type.var.opentype
        2: punctuation.section.bracket.curly.begin.opentype
      push:
        - meta_scope: meta.cv-params.opentype
        - match: '(})'
          captures:
            1: punctuation.section.bracket.curly.end.opentype
          pop: true
        - match: '(?<=^|[\s{}])(FeatUILabelNameID|FeatUITooltipTextNameID|SampleTextNameID|ParamUILabelNameID)\s*({)'
          captures:
            1: keyword.operator.parameter.opentype
            2: punctuation.section.bracket.curly.begin.opentype
          push:
            - meta_scope: meta.cv-param.$1.opentype
            - match: '(})'
              captures:
                1: punctuation.section.bracket.curly.end.opentype
              pop: true
            - include: main
        - match: (?<=\s|^)Character(?=\s|$|#)
          scope: keyword.operator.parameter.opentype
        - include: main
    - match: '(?<=^|[\s{}])(featureNames)\s*({)'
      captures:
        1: storage.type.var.opentype
        2: punctuation.section.bracket.curly.begin.opentype
      push:
        - meta_scope: meta.$1.opentype
        - match: '(})'
          captures:
            1: punctuation.section.bracket.curly.end.opentype
          pop: true
        - include: main
  comments:
    - match: '#'
      captures:
        0: punctuation.definition.comment.opentype
      push:
        - meta_scope: comment.line.number-sign.opentype
        - match: $
          pop: true
  identifier:
    - match: '(\\)?(@)?(?![\d.])[A-Za-z0-9._]+'
      scope: variable.parameter.opentype
      captures:
        1: punctuation.definition.backslash.opentype
        2: punctuation.definition.glyph-class.opentype
  inclusion:
    - match: \(
      captures:
        0: punctuation.section.bracket.round.begin.opentype
      push:
        - meta_content_scope: string.other.filename.opentype
        - match: \)
          captures:
            0: punctuation.section.bracket.round.end.opentype
          pop: true
        - include: strings
  keywords:
    - match: '(?<=^|[\s{};])(excludeDFLT|includeDFLT)(?=$|[\s{}#;])'
      scope: invalid.deprecated.keyword.opentype
    - match: '(?<=^|[\s{};])NULL(?=[\s{}#;]|$)'
      scope: constant.language.null.opentype
    - match: '(?<=^|[\s{};])name(?=[\s{}#;]|$)'
      scope: storage.type.var.name.opentype
    - match: '(?<![\w.])\.notdef(?![\w.])'
      scope: support.constant.language.opentype
    - match: '(?<=^|[\s{};])ignore(?=$|[\s{}\#;])'
      scope: storage.modifier.ignore.opentype
    - match: |-
        (?x) (?<=^|[\s{};])
        (anchor|anchorDef|by|lookup|contour|cursive|device|enumerate|enum|exclude_dflt|feature|from
        |IgnoreBaseGlyphs|IgnoreLigatures|IgnoreMarks|MarkAttachmentType|UseMarkFilteringSet
        |include|include_dflt|language|languagesystem|lookupflag|mark|markClass|nameid|parameters
        |position|pos|base|ligature|ligcomponent|required|RightToLeft|reversesub|rsub|script|substitute|sub|subtable|table
        |useExtension|valueRecordDef|FSType|WeightClass|WidthClass)
        (?=$|[\s{}\#(;])
      scope: keyword.operator.opentype
  number:
    - match: '(?<!\w)[-+]?0x[A-Fa-f0-9]+'
      scope: constant.numeric.integer.hex.opentype
    - match: '(?<!\w)[-+]?\d+'
      scope: constant.numeric.integer.opentype
  punctuation:
    - match: '='
      scope: keyword.operator.assignment.opentype
    - match: ;
      scope: punctuation.terminator.statement.opentype
    - match: ','
      scope: punctuation.separator.list.comma.opentype
    - match: '-'
      scope: punctuation.separator.range.dash.opentype
    - match: "'"
      scope: punctuation.definition.context-mark.opentype
    - match: '{'
      scope: punctuation.section.bracket.curly.begin.opentype
    - match: '}'
      scope: punctuation.section.bracket.curly.end.opentype
    - match: <
      scope: punctuation.section.bracket.angle.begin.opentype
    - match: '>'
      scope: punctuation.section.bracket.angle.end.opentype
    - match: '\['
      scope: punctuation.section.bracket.square.begin.opentype
    - match: '\]'
      scope: punctuation.section.bracket.square.end.opentype
    - match: \(
      scope: punctuation.section.bracket.round.begin.opentype
    - match: \)
      scope: punctuation.section.bracket.round.end.opentype
  strings:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.opentype
      push:
        - meta_scope: string.quoted.double.opentype
        - match: '"'
          captures:
            0: punctuation.definition.string.end.opentype
          pop: true
        - match: '\\[A-Fa-f0-9]{1,4}'
          scope: constant.character.escape.codepoint.opentype
  tags:
    - match: |-
        (?x) (?<=^|[\s{};])
        (aalt|abvf|abvm|abvs|afrc|akhn|blwf|blwm|blws|calt|case|ccmp|cfar|cjct|clig|cpct|cpsp
        |cswh|curs|cv[0-9]{2}|c2pc|c2sc|dist|dlig|dnom|dtls|expt|falt|fin2|fin3|fina|flac|frac
        |fwid|half|haln|halt|hist|hkna|hlig|hngl|hojo|hwid|init|isol|ital|jalt|jp78|jp83|jp90
        |jp04|kern|lfbd|liga|ljmo|lnum|locl|ltra|ltrm|mark|med2|medi|mgrk|mkmk|mset|nalt|nlck
        |nukt|numr|onum|opbd|ordn|ornm|palt|pcap|pkna|pnum|pref|pres|pstf|psts|pwid|qwid|rand
        |rclt|rkrf|rlig|rphf|rtbd|rtla|rtlm|ruby|rvrn|salt|sinf|size|smcp|smpl|ss[0-9]{2}|ssty
        |stch|subs|sups|swsh|titl|tjmo|tnam|tnum|trad|twid|unic|valt|vatu|vert|vhal|vjmo|vkna
        |vkrn|vpal|vrt2|vrtr|zero)
        (?=[\s#;]|$)
      scope: support.constant.language.tag.feature.opentype
    - match: |-
        (?x) (?<=^|[\s{};])
        (arab|armn|avst|bali|bamu|batk|beng|bng2|bopo|brah|brai|bugi|buhd|byzm|cans|cari|cakm
        |cham|cher|hani|copt|cprt|cyrl|DFLT|dsrt|deva|dev2|egyp|ethi|geor|glag|goth|grek|gujr
        |gjr2|guru|gur2|hang|jamo|hano|hebr|kana|armi|phli|prti|java|kthi|knda|knd2|kana|kali
        |khar|khmr|lao|latn|lepc|limb|linb|lisu|lyci|lydi|mlym|mlm2|mand|math|mtei|merc|mero
        |plrd|mong|musc|mymr|mym2|talu|nko|ogam|olck|ital|xpeo|sarb|orkh|orya|ory2|osma|phag
        |phnx|rjng|runr|samr|saur|shrd|shaw|sinh|sora|xsux|sund|sylo|syrc|tglg|tagb|tale|lana
        |tavt|takr|taml|tml2|telu|tel2|thaa|thai|tibt|tfng|ugar|vai|yi)
        (?=[\s#;]|$)
      scope: support.constant.language.tag.script.opentype
    - match: |-
        (?x) (?<=^|[\s{};])
        (ARA|APPH|ANG|AMH|ALT|ALS|AKA|AIO|AGW|AFR|AFK|ADY|ACR|ACH|ABK|ABA|BGQ|BGC|BEN|BEM|BEL
        |BDY|BCR|BCH|BBR|BBC|BAU|BAR|BAN|BAL|BAG|BAD0|BAD|AZE|AZB|AYM|AWA|AVR|ATH|AST|ASM|ARK
        |ARI|ARG|CHE|CEB|CBK|CAT|CAK|BUG|BTS|BTI|BSH|BRX|BRM|BRI|BRH|BRE|BPY|BOS|BML|BMB|BLT
        |BLN|BLK|BLI|BKF|BJJ|BIS|BIL|BIK|BHO|BHI|BGR|DEU|DCR|DAX|DAR|DAN|CUK|CTG|CSY|CSL|CSB
        |CRT|CRR|CRE|CPP|COS|COR|COP|CMR|CGG|CHY|CHU|CHA|CHR|CHP|CHO|CHK0|CHK|CHI|CHH|CHG|EWE
        |EVN|EVK|EUQ|ETI|ESU|ESP|ERZ|ENG|EMK|ELL|EFI|EDO|ECR|EBI|DZN|DUN|DUJ|DRI|DNK|DNJ|DNG
        |DJR0|DJR|DIV|DIQ|DHV|DHG|DGR|DGO|GLK|GKP|GIL0|GIL|GIH|GEZ|GAW|GAR|GAL|GAG|GAE|GAD|FUV
        |FUL|FTA|FRP|FRL|FRI|FRC|FRA|FOS|FON|FNE|FLE|FJI|FIN|FAT|FAR|FAN0|FAN|HUN|HRV|HRI|HO
        |HND|HMO|HMN|HMA|HIN|HIL|HER|HBN|HAZ|HAY|HAW|HAU|HAR|HAL|HAI|GUZ|GUJ|GUF|GUC|GUA|GRO
        |GRN|GON|GOG|GNN|GMZ|KAB0|KAB|JUL|JUD|JBO|JAN|JAM|JII|JAV|IWR|ITA|ISM|ISL|IRT|IRI|IPPH
        |IPK|INU|ING|IND|INA|ILO|ILE|IDO|IJO|IBO|IBB|IBA|HYE0|HYE|KMS|KMO|KMN|KMB|KLM|KKN|KJP
        |KJD|KIU|KIS|KIR|KIK|KHW|KHV|KHT|KHS|KHM|KHK|KHA|KGE|KEK|KEB|KEA|KDE|KAZ|KAT|KAR|KAN
        |KAL|KAC|KUY|KUU|KUR|KUM|KUL|KUI|KUA|KSW|KSM|KSI|KSH0|KSH|KRT|KRN|KRM|KRL|KRK|KRI|KPL
        |KOZ|KOS|KOR|KOP|KOM|KON0|KON|KOK|KOH|KOD|KNR|LUB|LUA|LTZ|LTH|LSM|LSB|LRC|LOM|LMW|LMO
        |LMB|LMA|LKI|LJP|LIS|LIN|LIM|LIJ|LEZ|LDK|LCR|LAZ|LAT|LAO|LAM|LAK|LAH|LAD|KYU|KYK|MLG
        |MLE|MKW|MKR|MKD|MIZ|MIN|MFE|MER|MEN|MDR|MDE|MCR|MCH|MBN|MAW|MAR|MAP|MAN|MAM|MAL|MAK
        |MAJ|MAH|MAG|MAD|LVI|LUO|LUH|LUG|NAV|NAU|NAS|NAP|NAN|NAH|NAG|MZN|MYN|MWW|MWL|MUS|MUN
        |MTS|MTH|MRI|MOS|MOR|MON|MOL|MOK|MOH|MNX|MNK|MNI|MNG|MND|MLY|MLR|MLN|ORO|ORI|OJB|OCR
        |OCI|NYN|NYM|NTO|NTA|NSO|NSM|NOV|NOR|NOG|NOE|NLD|NKO|NKL|NIU|NIS|NHC|NGR|NGA|NEW|NEP
        |NDS|NDG|NDC|NDB|NCR|QUH|QUC|QIN|PWO|PTG|PRO|PON|POH|PNB|PMS|PLK|PLG|PIL|PIH|PHK|PGR
        |PDC|PCD|PCC|PAU|PAS|PAP0|PAP|PAN|PAM|PAL|PAG|PAA|OSS|SEK|SCO|SCN|SAY|SAT|SAS|SAN|SAD
        |RUS|RUP|RUN|RUA|RTM|RSY|ROY|ROM|RMY|RMS|RKW|RIT|RIF|RIA|REJ|RBU|RCR|RAR|RAJ|QWH|QVI
        |QUZ|SSM|SSL|SRR|SRK|SRD|SRB|SQI|SOT|SOP|SOG|SNK|SNH|SND|SNA0|SNA|SMO|SML|SLV|SLA|SKY
        |SKS|SIG|SID|SIB|SHN|SHI|SGS|SGO|SGA|SEL|TIV|TIB|THT|THA|TGY|TGR|TGN|TGL|TET|TEL|TDD
        |TCR|TAT|TAM|TAJ|TAB|SZL|SYR|SYL|SXU|SXT|SWZ|SWK|SWA|SVE|SVA|SUR|SUN|SUK|STQ|VIT|VEN
        |VEC|UZB|UYG|USB|URD|UMB|UKR|UDM|TZO|TZM|TYZ|TWI|TVL|TUV|TUM|TUL|TUA|TSG|TRK|TPI|TOD0
        |TOD|TNG|TNE|TNA|TMN|TMH|TKM|ZUL|ZZA|dflt)
        (?=[\s#;]|$)
      scope: support.constant.language.tag.opentype
    - match: '(?<=^|[\s{};])(hang|icfb|icft|ideo|idtp|math|romn)(?=[\s#;]|$)'
      scope: support.constant.language.tag.baseline.opentype
  target:
    - match: '(\\)?\[?(@)?(?![\d.])[A-Za-z0-9._-]+\]?('')'
      scope: entity.name.subject.opentype
      captures:
        1: punctuation.definition.backslash.opentype
        2: punctuation.definition.context-mark.opentype
        3: punctuation.definition.glyph-class.opentype
